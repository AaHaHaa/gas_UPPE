% This code duplicates the results of double-pulse Raman generation done by
% Konyashchenko et al.
%
% The technique of Raman conversion of sub-100-fs laser pulses based on 
% excitation of active medium by two orthogonally polarized pulses has been
% developed for Raman lasers with a glass capillary. 52 fs Stokes pulse at 
% the wavelength of 1200 nm has been generated by stimulated Raman 
% scattering of 48 fs Ti:sapphire laser pulse at the wavelength of 800 nm 
% in hydrogen. 13% energy conversion efficiency has been achieved at pulse 
% repetition rate up to 2 kHz.
%
% Konyashchenko et al., "Frequency shifting of sub-100 fs laser pulses by 
% stimulated Raman scattering in a capillary filled with pressurized gas," 
% Appl. Phys. B 93, 455-461 (2008)

close all; clearvars;

addpath('../../../user_helpers','../../../broadband UPPE algorithm');

%% Setup parameters
c = 299792458*1e-12; % m/ps
wavelength_range = [0.3,10]*1e-6; % m
Nt = 2^17;
[f0,f_range,time_window,dt] = find_tw_f0(c./wavelength_range,Nt);

sim.f0 = f0;
%sim.progress_bar = false;
sim.progress_bar_name = '130-bar Raman from 800nm';
sim.pulse_centering = false;

num_save = 30;
fiber.L0 = 0.1; % propagation length
sim.save_period = fiber.L0/num_save;

f = sim.f0+(-Nt/2:Nt/2-1)'/time_window; % THz
t = (-Nt/2:Nt/2-1)'*dt; % ps
lambda = c./f*1e9; % nm

coupling_efficiency = 0.72;

%% Gas info
[fiber,sim] = load_default_UPPE_propagate(fiber,sim);

gas.core_radius = 50e-6; % m
gas.temperature = 273.15 + 25; % K
gas.pressure = 130*1.01325e5; % Pa
gas.wavelength_order = 6;
gas.mode_profile_wavelength = 800e-9; % m
gas.gas_material = 'H2';
gas.fiber_type = 'no_coating';
gas.xy_sampling = 101;

[fiber,sim,gas] = gas_info(fiber,sim,gas,lambda*1e-9);

%% Single-pulse pumping
tfwhm = 0.048; % ps
total_energy = 70e3; % nJ
pump_wavelength = 800e-9; % m
freq_shift = c/pump_wavelength - sim(1).f0;
input_field = build_MMgaussian(tfwhm,time_window,total_energy,1,Nt,{'ifft',freq_shift},1);
tfwhm2 = 1.5; % ps
func = calc_chirp;
[~,chirped_field] = func.Gaussian( tfwhm2,ifftshift(2*pi*f,1),ifft(input_field.fields),1 );
input_field.fields = chirped_field*sqrt(coupling_efficiency);

prop_output{1} = UPPE_propagate(fiber,input_field,sim,gas);

%% Two-pulse pumping
tfwhm = 0.048; % ps
total_energy = 45e3; % nJ
pump_wavelength = 800e-9; % m
freq_shift = c/pump_wavelength - sim(1).f0;
input_field(1) = build_MMgaussian(tfwhm,time_window,total_energy,1,Nt,{'ifft',freq_shift},1,-5);
tfwhm2 = 1.5; % ps
func = calc_chirp;
[~,chirped_field] = func.Gaussian( tfwhm2,ifftshift(2*pi*f,1),ifft(input_field(1).fields),1 );
input_field.fields = chirped_field;

total_energy = 30e3; % nJ
pump_wavelength = 800e-9; % m
freq_shift = c/pump_wavelength - sim(1).f0;
input_field(2) = build_MMgaussian(tfwhm,time_window,total_energy,1,Nt,{'ifft',freq_shift},1,5);
tfwhm2 = 1.5; % ps
func = calc_chirp;
[~,chirped_field] = func.Gaussian( tfwhm2,ifftshift(2*pi*f,1),ifft(input_field(2).fields),1 );
input_field(2).fields = chirped_field;

initial_condition.fields = (input_field(1).fields + input_field(2).fields)*sqrt(coupling_efficiency);
initial_condition.dt = dt;
prop_output{2} = UPPE_propagate(fiber,initial_condition,sim,gas);

%%
save('Raman_52fs.mat');